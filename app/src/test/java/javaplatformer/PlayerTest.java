/*
 * This source file was generated by the Gradle 'init' task
 */
package javaplatformer;

import org.junit.jupiter.api.Test;

import javaplatformer.DataTransferObjects.PaintInformation;
import javaplatformer.GameLogic.Player;
import javaplatformer.Physics.Universe;
import javaplatformer.Physics.Velocity;

import static org.junit.jupiter.api.Assertions.assertEquals;

import java.awt.Color;

public class PlayerTest {
    @Test
    public void PlayerMassWorks() {
        Player newPlayer = new Player(Color.LIGHT_GRAY, 300, 500, 100, 100, new Velocity((float) 1.0, (float) Math.PI));
        assertEquals(newPlayer.getMass(), 100.0);
    }

    @Test
    public void PlayerXVelocityWorks() {
        Player newPlayer = new Player(Color.LIGHT_GRAY, 300, 500, 100, 100, new Velocity((float) 1.0, (float) Math.PI));
        Universe universe = Universe.getOrCreateUniverse();
        universe.participate(newPlayer);
        universe.tick();
        assertEquals(newPlayer.getCurrentX(), 299);
        assertEquals(newPlayer.getCurrentY(), 500);
        universe.tick();
        universe.tick();
        universe.tick();
        assertEquals(newPlayer.getCurrentY(), 500);
    }

    @Test
    public void PlayerDiagonalVelocityWorks() {
        float initialDirection = (float) ((3.0 / 4) * Math.PI);
        float magnitude = (float) 1.0;
        Player newPlayer = new Player(Color.LIGHT_GRAY, 0, 0, 100, 100,
                new Velocity(magnitude, initialDirection));
        Universe universe = Universe.getOrCreateUniverse();
        universe.participate(newPlayer);
        universe.tick();
        assertEquals(newPlayer.getPaintInformation(), new PaintInformation(Color.LIGHT_GRAY,
                (float) -0.7071067690849304, (float) 0.7071067690849304, 100, 100));
    }

}